@import "variables";

.background {
    background-image: url('/assets/images/main-page-background.webp');
    background-repeat: no-repeat;
    background-size: cover;
    position: absolute;
    z-index: -1;
    top: 0;
    left: 0;
    width: 100dvw;
    max-width: 100%;
    height: 100dvh;
    &:after {
        content: '';
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        height: 50%;
        background: linear-gradient(180deg, rgba(36, 34, 47, 0) 0%, $background-color 50%);
        z-index: 2;
    }
}

.content-grid {
    --padding-inline: #{2 * $grid-unit};
    --content-max-width: #{120 * $grid-unit};
    --breakout-max-width: #{150 * $grid-unit};

    --breakout-size: calc(
        (var(--breakout-max-width) - var(--content-max-width)) / 2
    );

    display: grid;
    grid-template-columns:
    [full-width-start] minmax(var(--padding-inline), 1fr)
    [breakout-start] minmax(0, var(--breakout-size))
    [content-start] min(
      100% - (var(--padding-inline) * 2),
      var(--content-max-width)
    )
    [content-end]
    minmax(0, var(--breakout-size)) [breakout-end]
    minmax(var(--padding-inline), 1fr) [full-width-end];
    row-gap: 15 * $grid-unit;
}

.content-grid > :not(.breakout, .full-width),
.full-width > :not(.breakout, .full-width) {
    grid-column: content;
}

.content-grid > .breakout {
    grid-column: breakout;
}

.content-grid > .full-width {
    grid-column: full-width;

    display: grid;
    grid-template-columns: inherit;
}
